/*
 * This is a manifest file that'll be compiled into application.css.
 *
 * With Propshaft, assets are served efficiently without preprocessing steps. You can still include
 * application-wide styles in this file, but keep in mind that CSS precedence will follow the standard
 * cascading order, meaning styles declared later in the document or manifest will override earlier ones,
 * depending on specificity.
 *
 * Consider organizing styles into separate files for maintainability.
 */
@import url("navbar.css");
@import url("sidebar.css");
@import url("auth.css");
@import url("main_tab.css");
@import url("post.css");
@import url("profile.css");
@import url("edit_profile.css");
@import url("edit_post.css");
@import url("manage_user.css");
@import url("admin_post.css");

:root {
--dark-blue: #3C5999;
--plholder-color: rgb(156, 156, 156);
--input-border-color: rgb(193, 205, 215);
--marked-btn-color: rgb(35, 53, 91);
--primary-btn-hover: #617bb4;
--form-color: rgba(219, 234, 248, 0.9);
--folow-btn-color: linear-gradient(to top left, #EB5757, #F2994A);
--post-bg-color: whitesmoke;
--heart-color:  rgb(226, 83, 123);
--muted: #9a9a9a;
--green: #219653;
--green-hover: rgb(91, 172, 91);
--black-transparent: rgba(0, 0, 0, 0.4);
font-size: 14px;
}

body {
    font-family: Roboto;
    background-color: whitesmoke;
    padding: 0;
    margin: 0;
    height: 100vh;
    min-width: 400px;
}

form {
    max-width: 80%;
}

input::placeholder, textarea::placeholder {
    font-style: italic;
    font-size: 0.95rem;
    color: var(--plholder-color) !important;
}

input, textarea, select {
    outline: none;
    border-radius: 5px;
    width: 80%;
    height: fit-content;
    padding: 5px 10px;
    border: 1px solid var(--input-border-color);
}

input[type="file"] {
    display: none;
}

select {
    width: fit-content;
}

input:focus, textarea:focus, select:focus, input[type="checkbox"]:focus {
    border-width: 2px;
    border-color: var(--dark-blue);
}

.custom.form-check-input {
    width: 1.2rem;
    height: 1.5rem;
}

button, a {
    cursor: pointer;
    transition: all 0.3s ease;
}

a {
    text-decoration: none;
    color: inherit;
}

hr {
    margin: 0
}

h1 {
    color: var(--dark-blue)
}

.custom-primary-btn {
    border: none;
    background-color: var(--dark-blue);
    color: white;
    font-weight: bold;
    padding: 7px 20px;
    border-radius: 5px;
    width: fit-content;
} 

.custom-primary-btn:hover {
    background-color: var(--primary-btn-hover);
    box-shadow: 0 4px 10px rgba(31, 62, 119, 0.379);
}

.truncate {
    display: -webkit-box !important;
    -webkit-box-orient: vertical;
    text-align: justify;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break:keep-all;
}

.toast-container {
    z-index: 1200; 
    width: 100%; 
}

.toast-container p {
    font-size: 1.1rem;
    margin: 0;
}

.custom-alert.toast {
    border: 1px solid rgb(153, 3, 3);
}

.custom-alert.toast .toast-header {
    background-color: rgb(249, 112, 112);
    color: white;
    border-bottom: 1px solid rgb(153, 3, 3); 
}

.notice {
    border: 1px solid green;
}

/* Main Content Layout */
.main-content {
    height: 100%;
    margin: 0;
}

.content-area {
    background-color: white;
    margin: 20px;
    flex: 5;
    overflow-y: auto; /* Allow scrolling if content is long */
    height: 100%; /* Limit height to prevent expanding */
    border-radius: 2px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Subtle shadow */
}

hr {
    color: var(--muted)
}

.field_with_errors {
  display: contents;
}

.error-messages {
    color: red !important;
    background-color: rgb(255, 222, 222);
    padding: 10px;
}


/* RESPONSIVE */
@media screen and (max-width: 992px) {
    :root {
        font-size: 13px;
    }

    .content-area {
        margin: 15px;
    }
}

@media screen and (max-width: 768px) {
    :root {
        font-size: 12px;
    }
    
    .content-area {
        margin: 10px;
    }

    .toast-container .toast {
        width: 90%;
    }
}